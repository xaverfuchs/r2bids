trial = list(
Description = "Overall trial number across the entire experiment."
)
)
# Metadata with nested lists for each variable
meta_data <- list(
participant_id = list(
Description = "Unique participant identifier in the format sub-XXX."
),
age = list(
Description = "Age of the participant in years.",
Units = "years"
),
gender = list(
Description = "Self-reported gender of the participant.",
Levels = list(
"m" = "Male",
"f" = "Female"
)
),
arm_top = list(
Description = "Indicates which arm was on top in a crossed posture.",
Levels = list(
"right" = "right arm",
"left" = "left arm",
)
),
length_lower_arm = list(
Description = "Length of the participant's lower arm in centimeters.",
Units = "cm"
),
run = list(
Description = "Run number in the experiment (e.g., first, second, etc.).",
Levels = list(
"1" = "first run",
"2" = "second run",
)
),
trial_in_run = list(
Description = "Trial number within the run."
),
posture = list(
Description = "Posture of the participant during the task.",
Levels = list(
"crossed" = "crossed arm posture",
"uncrossed" = "uncrossed arm posture",
)
),
stim_side = list(
Description = "Whether the two stimuli where on the same anatomical body side (e.g., both on the left arm).",
Levels = list(
"same" = "stimuli presented on same body side",
"different" = "stimuli presented across different body sides",
)
),
stim_segment = list(
Description = "Whether the stimuli were presented within the same type of anatomical segment (upper arm or lower arm",
Levels = list(
"same" = "stimuli presented within same arm segment",
"different" = "stimuli presented across different arm segments",
)
),
soa = list(
Description = "Stimulus onset asynchrony (the time difference between the two stimuli's onsets) in milliseconds.",
Units = "ms"
),
tactor1side = list(
Description = "The antomical body side where the first tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor1segment = list(
Description = "The arm segment where the first stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
tactor2side = list(
Description = "The antomical body side where the second tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor2segment = list(
Description = "The arm segment where the second stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
response_correct = list(
Description = "Indicates whether the response was correct.",
Levels = list(
"0" = "Incorrect",
"1" = "Correct"
)
),
rt = list(
Description = "Reaction time.",
Units = "milliseconds"
),
session = list(
Description = "Session identifier. There was one session only.",
Levels = list(
"1" = "First session"
)
),
trial = list(
Description = "Overall trial number across the entire experiment."
)
)
# Metadata with nested lists for each variable
meta_data <- list(
participant_id = list(
Description = "Unique participant identifier in the format sub-XXX."
),
age = list(
Description = "Age of the participant in years.",
Units = "years"
),
gender = list(
Description = "Self-reported gender of the participant.",
Levels = list(
"m" = "Male",
"f" = "Female"
)
),
arm_top = list(
Description = "Indicates which arm was on top in a crossed posture.",
Levels = list(
"right" = "right arm",
"left" = "left arm"
)
),
length_lower_arm = list(
Description = "Length of the participant's lower arm in centimeters.",
Units = "cm"
),
run = list(
Description = "Run number in the experiment (e.g., first, second, etc.).",
Levels = list(
"1" = "first run",
"2" = "second run",
)
),
trial_in_run = list(
Description = "Trial number within the run."
),
posture = list(
Description = "Posture of the participant during the task.",
Levels = list(
"crossed" = "crossed arm posture",
"uncrossed" = "uncrossed arm posture",
)
),
stim_side = list(
Description = "Whether the two stimuli where on the same anatomical body side (e.g., both on the left arm).",
Levels = list(
"same" = "stimuli presented on same body side",
"different" = "stimuli presented across different body sides",
)
),
stim_segment = list(
Description = "Whether the stimuli were presented within the same type of anatomical segment (upper arm or lower arm",
Levels = list(
"same" = "stimuli presented within same arm segment",
"different" = "stimuli presented across different arm segments",
)
),
soa = list(
Description = "Stimulus onset asynchrony (the time difference between the two stimuli's onsets) in milliseconds.",
Units = "ms"
),
tactor1side = list(
Description = "The antomical body side where the first tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor1segment = list(
Description = "The arm segment where the first stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
tactor2side = list(
Description = "The antomical body side where the second tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor2segment = list(
Description = "The arm segment where the second stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
response_correct = list(
Description = "Indicates whether the response was correct.",
Levels = list(
"0" = "Incorrect",
"1" = "Correct"
)
),
rt = list(
Description = "Reaction time.",
Units = "milliseconds"
),
session = list(
Description = "Session identifier. There was one session only.",
Levels = list(
"1" = "First session"
)
),
trial = list(
Description = "Overall trial number across the entire experiment."
)
)
# Metadata with nested lists for each variable
meta_data <- list(
participant_id = list(
Description = "Unique participant identifier in the format sub-XXX."
),
age = list(
Description = "Age of the participant in years.",
Units = "years"
),
gender = list(
Description = "Self-reported gender of the participant.",
Levels = list(
"m" = "Male",
"f" = "Female"
)
),
arm_top = list(
Description = "Indicates which arm was on top in a crossed posture.",
Levels = list(
"right" = "right arm",
"left" = "left arm"
)
),
length_lower_arm = list(
Description = "Length of the participant's lower arm in centimeters.",
Units = "cm"
),
run = list(
Description = "Run number in the experiment (e.g., first, second, etc.).",
Levels = list(
"1" = "first run",
"2" = "second run"
)
),
trial_in_run = list(
Description = "Trial number within the run."
),
posture = list(
Description = "Posture of the participant during the task.",
Levels = list(
"crossed" = "crossed arm posture",
"uncrossed" = "uncrossed arm posture",
)
),
stim_side = list(
Description = "Whether the two stimuli where on the same anatomical body side (e.g., both on the left arm).",
Levels = list(
"same" = "stimuli presented on same body side",
"different" = "stimuli presented across different body sides",
)
),
stim_segment = list(
Description = "Whether the stimuli were presented within the same type of anatomical segment (upper arm or lower arm",
Levels = list(
"same" = "stimuli presented within same arm segment",
"different" = "stimuli presented across different arm segments",
)
),
soa = list(
Description = "Stimulus onset asynchrony (the time difference between the two stimuli's onsets) in milliseconds.",
Units = "ms"
),
tactor1side = list(
Description = "The antomical body side where the first tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor1segment = list(
Description = "The arm segment where the first stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
tactor2side = list(
Description = "The antomical body side where the second tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side",
)
),
tactor2segment = list(
Description = "The arm segment where the second stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm",
)
),
response_correct = list(
Description = "Indicates whether the response was correct.",
Levels = list(
"0" = "Incorrect",
"1" = "Correct"
)
),
rt = list(
Description = "Reaction time.",
Units = "milliseconds"
),
session = list(
Description = "Session identifier. There was one session only.",
Levels = list(
"1" = "First session"
)
),
trial = list(
Description = "Overall trial number across the entire experiment."
)
)
# Metadata with nested lists for each variable
meta_data <- list(
participant_id = list(
Description = "Unique participant identifier in the format sub-XXX."
),
age = list(
Description = "Age of the participant in years.",
Units = "years"
),
gender = list(
Description = "Self-reported gender of the participant.",
Levels = list(
"m" = "Male",
"f" = "Female"
)
),
arm_top = list(
Description = "Indicates which arm was on top in a crossed posture.",
Levels = list(
"right" = "right arm",
"left" = "left arm"
)
),
length_lower_arm = list(
Description = "Length of the participant's lower arm in centimeters.",
Units = "cm"
),
run = list(
Description = "Run number in the experiment (e.g., first, second, etc.).",
Levels = list(
"1" = "first run",
"2" = "second run"
)
),
trial_in_run = list(
Description = "Trial number within the run."
),
posture = list(
Description = "Posture of the participant during the task.",
Levels = list(
"crossed" = "crossed arm posture",
"uncrossed" = "uncrossed arm posture"
)
),
stim_side = list(
Description = "Whether the two stimuli where on the same anatomical body side (e.g., both on the left arm).",
Levels = list(
"same" = "stimuli presented on same body side",
"different" = "stimuli presented across different body sides"
)
),
stim_segment = list(
Description = "Whether the stimuli were presented within the same type of anatomical segment (upper arm or lower arm",
Levels = list(
"same" = "stimuli presented within same arm segment",
"different" = "stimuli presented across different arm segments"
)
),
soa = list(
Description = "Stimulus onset asynchrony (the time difference between the two stimuli's onsets) in milliseconds.",
Units = "ms"
),
tactor1side = list(
Description = "The antomical body side where the first tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side"
)
),
tactor1segment = list(
Description = "The arm segment where the first stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm"
)
),
tactor2side = list(
Description = "The antomical body side where the second tactor was applied.",
Levels = list(
"left" = "left body side",
"right" = "right body side"
)
),
tactor2segment = list(
Description = "The arm segment where the second stimulus was applied.",
Levels = list(
"upper" = "upper arm",
"lower" = "forearm"
)
),
response_correct = list(
Description = "Indicates whether the response was correct.",
Levels = list(
"0" = "Incorrect",
"1" = "Correct"
)
),
rt = list(
Description = "Reaction time.",
Units = "milliseconds"
),
session = list(
Description = "Session identifier. There was one session only.",
Levels = list(
"1" = "First session"
)
),
trial = list(
Description = "Overall trial number across the entire experiment."
)
)
write_metadata(output_dir = output_dir, task_name = task_name, meta_data = meta_data)
data_loaded <- read_bids(bids_dir = "example_bids2", task_name = task_name, file_suffix = "beh")
data_loaded$participants
data_loaded$task_data
#Part 6: install and load
#use_r()
load_all() #load functions of package
install() #install the package
#Part 4: Website creation
pkgdown::build_site()
setwd("~/Documents/01_projects/12_openscience/r2bids")
#Part 5: create Namespace
devtools::document() #load first
#Part 1: package creation and development (steps only run when setting up)
library(devtools)
#Part 5: create Namespace
devtools::document() #load first
devtools::build_readme()
#Part 4: Website creation
pkgdown::build_site()
data.frame(ParticipantID = c(1, 2), Session = c(1, 1), Gender = c("Male", "Female"), weird_variable=c("1_2", "3_4"))
check_input_data(data = example_data, participant_col = "ParticipantID", session_col = "Session", gender_col = "Gender", ignore_cols=c("weird_variable"))
example_data <- data.frame(ParticipantID = c(1, 2), Session = c(1, 1), Gender = c("Male", "Female"), weird_variable=c("1_2", "3_4"))
check_input_data(data = example_data, participant_col = "ParticipantID", session_col = "Session", gender_col = "Gender", ignore_cols=c("weird_variable"))
setwd("~/Documents/01_projects/12_openscience/r2bids/R")
data <- data.frame(participant_id = c(1, 1, 2, 2),
session = c(1, 2, 1, 2),
age = c(25, 25, 30, 30),
gender = c('m', 'm', 'f', 'f'),
response_time = c(100, 200, 150, 180))
write_bids(data, output_dir = "bids_dir", task_name = "RTTask", participant_info_cols = c("age", "gender"))
read_bids(data, bids_dir = "bids_dir", task_name = "RTTask", participant_info_cols = c("age", "gender"))
read_bids(data, bids_dir = "bids_dir", task_name = "RTTask")
read_bids(bids_dir = "bids_dir", task_name = "RTTask")
data <- check_input_data(data)
data
data <- data.frame(participant_id = c("sub-001", "sub-001", "sub-002", "sub-002"),
session = c("ses-01", "ses-02", "ses-01", "ses-02"),
age = c(25, 25, 30, 30),
gender = c("m", "m", "f", "f"),
response_time = c(100, 200, 150, 180))
write_bids(data, output_dir = "bids_dir", task_name = "RTTask", participant_info_cols = c("age", "gender"))
read_bids(bids_dir = "bids_dir", task_name = "RTTask")
meta_data <- list(response_time = "Response time in milliseconds")
meta_data <- list(response_time = list(Description = "Response time in milliseconds", Units = "ms"))
write_metadata(output_dir = "bids_dir", task_name = "RTTask", meta_data = meta_data)
#Part 5: create Namespace
devtools::document() #load first
#Part 6: install and load
#use_r()
load_all() #load functions of package
#Part 4: Website creation
pkgdown::build_site()
setwd("~/Documents/01_projects/12_openscience/r2bids")
#Part 1: package creation and development (steps only run when setting up)
library(devtools)
#Part 5: create Namespace
devtools::document() #load first
#Part 6: install and load
#use_r()
load_all() #load functions of package
devtools::build_readme()
#Part 4: Website creation
pkgdown::build_site()
