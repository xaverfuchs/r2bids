[{"path":"https://xaverfuchs.github.io/r2bids/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rabBITS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-1-create-toy-data","dir":"Articles","previous_headings":"","what":"Step 1: Create Toy Data","title":"BIDS conversion example with toy data","text":"create simple toy dataset participant information behavioral data. Note variables deliberately called like called according BIDS conventions. dataset contains three participants response times accuracy. participant completed one session reaction time task.","code":"# Toy dataset example_data <- data.frame(   ParticipantID = c(1, 2, 3, 1, 2, 3),   Gender=c(\"M\", \"F\", \"O\", \"M\", \"F\", \"O\"),   Age=c(21, 32, 27, 21, 32, 27),   Session = c(1, 1, 1, 2, 2, 2),   ResponseTime = c(350, 400, 375, 415, 372, 401),   Accuracy = c(1, 0, 1, 1, 1, 1) )  # View the data print(example_data) #>   ParticipantID Gender Age Session ResponseTime Accuracy #> 1             1      M  21       1          350        1 #> 2             2      F  32       1          400        0 #> 3             3      O  27       1          375        1 #> 4             1      M  21       2          415        1 #> 5             2      F  32       2          372        1 #> 6             3      O  27       2          401        1"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-2-validate-input-data","dir":"Articles","previous_headings":"","what":"Step 2: Validate Input Data","title":"BIDS conversion example with toy data","text":"creating BIDS dataset, ’s important ensure input data complies naming conventions (snake_case) contains necessary columns like participant IDs sessions. checking implemented check_input_data() function renames variables labels snake_case reports . Note creates new data set. Please check resulting set ensure everything correct. apply function toy data created last step. input data valid, can proceed next steps.","code":"# Run validation example_data_checked <- check_input_data(data = example_data,                   participant_col = \"ParticipantID\",                   session_col = \"Session\",                   gender_col = \"Gender\") #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: M -> m #> renamed variable label: F -> f #> renamed variable label: O -> o #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002, sub-003 ... #> renamed variable: Session -> session #> renamed sessions to ses-01, ses-02 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: Age -> age #> renamed variable: ResponseTime -> response_time #> renamed variable: Accuracy -> accuracy #>  #> Step 4: checking correct coding of gender variable #> Warning in check_input_data(data = example_data, participant_col = #> \"ParticipantID\", : Invalid values found in gender column. Please recode to 'm', #> 'f', or 'o'.  print(example_data_checked) #>   participant_id gender age session response_time accuracy #> 1        sub-001      M  21  ses-01           350        1 #> 2        sub-002      F  32  ses-01           400        0 #> 3        sub-003      O  27  ses-01           375        1 #> 4        sub-001      M  21  ses-02           415        1 #> 5        sub-002      F  32  ses-02           372        1 #> 6        sub-003      O  27  ses-02           401        1"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-3-write-the-bids-data","dir":"Articles","previous_headings":"","what":"Step 3: Write the BIDS data","title":"BIDS conversion example with toy data","text":"Now, use write_bids function generate BIDS-compliant directory files. function performs following actions: Creates output directory (doesn’t already exist). Writes participants.tsv file includes participant IDs session numbers. Writes task-specific .tsv file behavioral data (response times, accuracy, etc.). find directory now containing desired files.","code":"# Output directory  output_dir <- \"example_bids\"  # Task name for BIDS task_name <- \"reaction\"  # Create the BIDS dataset write_bids(data = example_data_checked, output_dir = output_dir, task_name = task_name, participant_info_cols = c(\"age\", \"gender\"), file_suffix = \"beh\") #> Participants data saved: example_bids/participants.tsv #> Task data saved: example_bids/sub-001/ses-01/sub-001_task-reaction_beh.tsv #> Task data saved: example_bids/sub-001/ses-02/sub-001_task-reaction_beh.tsv #> Task data saved: example_bids/sub-002/ses-01/sub-002_task-reaction_beh.tsv #> Task data saved: example_bids/sub-002/ses-02/sub-002_task-reaction_beh.tsv #> Task data saved: example_bids/sub-003/ses-01/sub-003_task-reaction_beh.tsv #> Task data saved: example_bids/sub-003/ses-02/sub-003_task-reaction_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-4-define-and-write-json-metadata","dir":"Articles","previous_headings":"","what":"Step 4: Define and Write JSON Metadata","title":"BIDS conversion example with toy data","text":"Next, define metadata task, describe behavioral variables recorded experiment (task data contained tsv files). metadata nested list element describes specific column dataset. nested lists descrbibe keys belonging variable. JSON file included BIDS structure can now easily written wirth function write_metadata(). JSON file added directory.","code":"# Metadata for the example above with nested lists for each variable meta_data <- list(   participant_id = list(     Description = \"Unique participant identifier in the format sub-XXX.\",     Levels = list(       \"sub-001\" = \"Participant 1\",       \"sub-002\" = \"Participant 2\",       \"sub-003\" = \"Participant 3\"     )   ),   gender = list(     Description = \"Self-reported gender of the participant.\",     Levels = list(       \"m\" = \"Male\",       \"f\" = \"Female\",       \"o\" = \"Other\"     )   ),   age = list(     Description = \"Age of the participant in years.\",     Units = \"years\"   ),   session = list(     Description = \"Session identifier.\",     Levels = list(       \"ses-01\" = \"First session\",       \"ses-02\" = \"Second session\"     )   ),   response_time = list(     Description = \"Response time of the participant in the task.\",     Units = \"milliseconds\"   ),   accuracy = list(     Description = \"Task accuracy (1 = correct, 0 = incorrect).\",     Levels = list(       \"0\" = \"Incorrect response\",       \"1\" = \"Correct response\"     )   ) )  # View the metadata print(meta_data) #> $participant_id #> $participant_id$Description #> [1] \"Unique participant identifier in the format sub-XXX.\" #>  #> $participant_id$Levels #> $participant_id$Levels$`sub-001` #> [1] \"Participant 1\" #>  #> $participant_id$Levels$`sub-002` #> [1] \"Participant 2\" #>  #> $participant_id$Levels$`sub-003` #> [1] \"Participant 3\" #>  #>  #>  #> $gender #> $gender$Description #> [1] \"Self-reported gender of the participant.\" #>  #> $gender$Levels #> $gender$Levels$m #> [1] \"Male\" #>  #> $gender$Levels$f #> [1] \"Female\" #>  #> $gender$Levels$o #> [1] \"Other\" #>  #>  #>  #> $age #> $age$Description #> [1] \"Age of the participant in years.\" #>  #> $age$Units #> [1] \"years\" #>  #>  #> $session #> $session$Description #> [1] \"Session identifier.\" #>  #> $session$Levels #> $session$Levels$`ses-01` #> [1] \"First session\" #>  #> $session$Levels$`ses-02` #> [1] \"Second session\" #>  #>  #>  #> $response_time #> $response_time$Description #> [1] \"Response time of the participant in the task.\" #>  #> $response_time$Units #> [1] \"milliseconds\" #>  #>  #> $accuracy #> $accuracy$Description #> [1] \"Task accuracy (1 = correct, 0 = incorrect).\" #>  #> $accuracy$Levels #> $accuracy$Levels$`0` #> [1] \"Incorrect response\" #>  #> $accuracy$Levels$`1` #> [1] \"Correct response\" write_metadata(output_dir = output_dir, task_name = task_name, meta_data = meta_data) #> Metadata JSON saved: example_bids/task-reaction_beh.json"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-5-read-and-inspect-the-generated-files","dir":"Articles","previous_headings":"","what":"Step 5: Read and Inspect the Generated Files","title":"BIDS conversion example with toy data","text":"files created, can laod function read_bids(). output list participant data task data. can see identical data generated Step 1.","code":"data_loaded <- read_bids(bids_dir = \"example_bids\", task_name = task_name, file_suffix = \"beh\") #> Participants data loaded from: example_bids/participants.tsv #> Task data loaded from all task files. data_loaded$participants #>   participant_id age gender #> 1        sub-001  21      M #> 2        sub-002  32      F #> 3        sub-003  27      O data_loaded$task_data #>   participant_id session response_time accuracy #> 1        sub-001  ses-01           350        1 #> 2        sub-001  ses-02           415        1 #> 3        sub-002  ses-01           400        0 #> 4        sub-002  ses-02           372        1 #> 5        sub-003  ses-01           375        1 #> 6        sub-003  ses-02           401        1"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"step-1-load-and-inspect-b006-data-set","dir":"Articles","previous_headings":"","what":"Step 1: Load and Inspect B006 Data Set","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"see background information data set experiment, refer documentation (type “?B006Data”) see article.","code":"data(\"B006Data\") str(B006Data) #> 'data.frame':    32455 obs. of  30 variables: #>  $ Participant     : chr  \"B006b-08\" \"B006b-08\" \"B006b-08\" \"B006b-08\" ... #>  $ Run             : chr  \"Run2\" \"Run1\" \"Run2\" \"Run1\" ... #>  $ Posture         : chr  \"uncrossed\" \"uncrossed\" \"uncrossed\" \"uncrossed\" ... #>  $ StimSide        : chr  \"different\" \"different\" \"same\" \"different\" ... #>  $ StimSegment     : chr  \"different\" \"different\" \"different\" \"different\" ... #>  $ Tactor1         : int  6 5 6 6 2 1 1 1 4 2 ... #>  $ Tactor2         : int  1 2 2 1 5 6 3 5 1 5 ... #>  $ Tactor1Side     : Factor w/ 2 levels \"left\",\"right\": 1 2 1 1 1 2 2 2 1 1 ... #>  $ Tactor1Segment  : Factor w/ 2 levels \"lower\",\"upper\": 2 2 2 2 1 1 1 1 1 1 ... #>  $ Tactor2Side     : Factor w/ 2 levels \"left\",\"right\": 2 1 1 2 2 1 2 2 2 2 ... #>  $ Tactor2Segment  : Factor w/ 2 levels \"lower\",\"upper\": 1 1 1 1 2 2 1 2 1 2 ... #>  $ Stim1Intens     : int  90 90 100 100 75 80 70 75 80 80 ... #>  $ Stim2Intens     : int  75 80 75 70 100 90 85 100 80 90 ... #>  $ Trialtype       : int  360 378 313 343 276 245 21 203 162 272 ... #>  $ SOA             : int  800 100 50 300 800 50 50 300 100 800 ... #>  $ Repetition      : chr  \"1\" \"1\" \"1\" \"1\" ... #>  $ Trialnumber     : int  163 170 138 91 58 305 224 203 117 123 ... #>  $ TimeAfterBeep   : int  996 612 969 821 721 656 592 786 684 504 ... #>  $ Response        : chr  \"3_4\" \"3_4\" \"1_2\" \"3_4\" ... #>  $ Response_meaning: chr  \"different\" \"different\" \"same\" \"different\" ... #>  $ Response_correct: logi  TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ RT              : chr  \"618\" \"824\" \"752\" \"646\" ... #>  $ Order           : chr  \"uncrossed first\" \"uncrossed first\" \"uncrossed first\" \"uncrossed first\" ... #>  $ ResponseCoding  : Factor w/ 2 levels \"lift toes means same\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Trial_ok        : chr  \"True\" \"True\" \"True\" \"True\" ... #>  $ Trial_repeated  : chr  \"False\" \"False\" \"False\" \"False\" ... #>  $ Age             : int  22 22 22 22 22 22 22 22 22 22 ... #>  $ Sex             : chr  \"female\" \"female\" \"female\" \"female\" ... #>  $ Arm_top         : chr  \"right arm on top\" \"right arm on top\" \"right arm on top\" \"right arm on top\" ... #>  $ Length_lower_arm: int  21 21 21 21 21 21 21 21 21 21 ..."},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"step-2-prepare-and-validate-data","dir":"Articles","previous_headings":"","what":"Step 2: Prepare and Validate Data","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"can apply validate_input_data() function, renaming adjustments variables necessary. simplicity documentation, also reduce data set contain important variables . use tidyverse functions cleaning .","code":"library(dplyr)"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"variable-selection","dir":"Articles","previous_headings":"Step 2: Prepare and Validate Data","what":"Variable Selection","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"","code":"B006Data_bids <- B006Data %>%   select(Participant, Age, Sex, Arm_top, Length_lower_arm, Run, trial_in_run=Trialnumber,          Posture, StimSide, StimSegment, SOA,           Tactor1Side, Tactor1Segment, Tactor2Side, Tactor2Segment,          Response_correct, RT) %>%    arrange(Participant, Posture, Run, trial_in_run)  head(B006Data_bids) #>   Participant Age    Sex          Arm_top Length_lower_arm  Run trial_in_run #> 1    B006b-08  22 female right arm on top               21 Run1            1 #> 2    B006b-08  22 female right arm on top               21 Run1            2 #> 3    B006b-08  22 female right arm on top               21 Run1            3 #> 4    B006b-08  22 female right arm on top               21 Run1            4 #> 5    B006b-08  22 female right arm on top               21 Run1            5 #> 6    B006b-08  22 female right arm on top               21 Run1            6 #>   Posture  StimSide StimSegment SOA Tactor1Side Tactor1Segment Tactor2Side #> 1 crossed different   different  50        left          upper       right #> 2 crossed different   different 300        left          upper       right #> 3 crossed different   different 100        left          upper       right #> 4 crossed      same   different 100       right          lower       right #> 5 crossed      same   different 800       right          lower       right #> 6 crossed different   different 800        left          upper       right #>   Tactor2Segment Response_correct   RT #> 1          lower             TRUE 1365 #> 2          lower             TRUE  844 #> 3          lower             TRUE  536 #> 4          upper             TRUE  855 #> 5          upper             TRUE 1037 #> 6          lower             TRUE  897"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"variable-recoding","dir":"Articles","previous_headings":"Step 2: Prepare and Validate Data","what":"Variable Recoding","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"variables data set need fixing can run check_input_data() function. Also, session identifier. two “Runs” data one variable “Trial” starts one. runs separate session though, create new trial variable counts trials across two runs.","code":"B006Data_bids <- B006Data_bids %>%    mutate(Participant=as.numeric(gsub(\"B006b-\", \"\", Participant)),          Run=as.numeric(gsub(\"Run\", \"\", Run)),          Sex=recode_factor(Sex, \"female\"=\"f\", \"male\"=\"m\"),          Response_correct=as.numeric(Response_correct),          RT=as.numeric(RT),          session=1) %>%    group_by(Participant) %>%    mutate(Trial=1:n()) %>%    ungroup()"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"validate-the-data-set","dir":"Articles","previous_headings":"Step 2: Prepare and Validate Data","what":"Validate the Data Set","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"Now check data set looks good. variables coded factors matter writing tsv file, labels used.","code":"B006Data_bids <- check_input_data(B006Data_bids, participant_col = \"Participant\",                                    session_col = \"session\",                                    gender_col = \"Sex\") #>  #> Step 1: checking variable labels #> checking variable Sex #> checking variable Arm_top #> renamed variable label: right arm on top -> right_arm_on_top #> renamed variable label: left arm on top -> left_arm_on_top #> checking variable Posture #> checking variable StimSide #> checking variable StimSegment #> checking variable Tactor1Side #> checking variable Tactor1Segment #> checking variable Tactor2Side #> checking variable Tactor2Segment #>  #> Step 2: checking participant and session identifiers #> renamed variable: Participant -> participant_id #> renamed ids to sub-008, sub-009, sub-010, sub-011, sub-012, sub-013 ... #> renamed sessions to ses-01 ... #> renamed variable: Sex -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: Age -> age #> renamed variable: Arm_top -> arm_top #> renamed variable: Length_lower_arm -> length_lower_arm #> renamed variable: Run -> run #> renamed variable: Posture -> posture #> renamed variable: StimSide -> stim_side #> renamed variable: StimSegment -> stim_segment #> renamed variable: SOA -> soa #> renamed variable: Tactor1Side -> tactor1side #> renamed variable: Tactor1Segment -> tactor1segment #> renamed variable: Tactor2Side -> tactor2side #> renamed variable: Tactor2Segment -> tactor2segment #> renamed variable: Response_correct -> response_correct #> renamed variable: RT -> rt #> renamed variable: Trial -> trial #>  #> Step 4: checking correct coding of gender variable str(B006Data_bids) #> tibble [32,455 × 19] (S3: tbl_df/tbl/data.frame) #>  $ participant_id  : chr [1:32455] \"sub-008\" \"sub-008\" \"sub-008\" \"sub-008\" ... #>  $ age             : int [1:32455] 22 22 22 22 22 22 22 22 22 22 ... #>  $ gender          : Factor w/ 2 levels \"f\",\"m\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ arm_top         : chr [1:32455] \"right arm on top\" \"right arm on top\" \"right arm on top\" \"right arm on top\" ... #>  $ length_lower_arm: int [1:32455] 21 21 21 21 21 21 21 21 21 21 ... #>  $ run             : num [1:32455] 1 1 1 1 1 1 1 1 1 1 ... #>  $ trial_in_run    : int [1:32455] 1 2 3 4 5 6 7 8 9 10 ... #>  $ posture         : chr [1:32455] \"crossed\" \"crossed\" \"crossed\" \"crossed\" ... #>  $ stim_side       : chr [1:32455] \"different\" \"different\" \"different\" \"same\" ... #>  $ stim_segment    : chr [1:32455] \"different\" \"different\" \"different\" \"different\" ... #>  $ soa             : int [1:32455] 50 300 100 100 800 800 300 800 50 50 ... #>  $ tactor1side     : Factor w/ 2 levels \"left\",\"right\": 1 1 1 2 2 1 1 2 2 1 ... #>  $ tactor1segment  : Factor w/ 2 levels \"lower\",\"upper\": 2 2 2 1 1 2 1 2 1 1 ... #>  $ tactor2side     : Factor w/ 2 levels \"left\",\"right\": 2 2 2 2 2 2 2 1 2 2 ... #>  $ tactor2segment  : Factor w/ 2 levels \"lower\",\"upper\": 1 1 1 2 2 1 1 1 1 1 ... #>  $ response_correct: num [1:32455] 1 1 1 1 1 1 1 1 1 1 ... #>  $ rt              : num [1:32455] 1365 844 536 855 1037 ... #>  $ session         : chr [1:32455] \"ses-01\" \"ses-01\" \"ses-01\" \"ses-01\" ... #>  $ trial           : int [1:32455] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"step-3-write-the-bids-data","dir":"Articles","previous_headings":"","what":"Step 3: Write the BIDS data","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"Note several variables time passed participant_info_cols argument written participants.tsv","code":"# Output directory  output_dir <- \"example_bids2\"  # Task name for BIDS task_name <- \"LID\"  # Create the BIDS dataset write_bids(data = B006Data_bids, output_dir = output_dir,             task_name = task_name,             participant_info_cols = c(\"age\", \"gender\", \"arm_top\", \"length_lower_arm\"),             file_suffix = \"beh\") #> Participants data saved: example_bids2/participants.tsv #> Task data saved: example_bids2/sub-008/ses-01/sub-008_task-LID_beh.tsv #> Task data saved: example_bids2/sub-009/ses-01/sub-009_task-LID_beh.tsv #> Task data saved: example_bids2/sub-010/ses-01/sub-010_task-LID_beh.tsv #> Task data saved: example_bids2/sub-011/ses-01/sub-011_task-LID_beh.tsv #> Task data saved: example_bids2/sub-012/ses-01/sub-012_task-LID_beh.tsv #> Task data saved: example_bids2/sub-013/ses-01/sub-013_task-LID_beh.tsv #> Task data saved: example_bids2/sub-014/ses-01/sub-014_task-LID_beh.tsv #> Task data saved: example_bids2/sub-015/ses-01/sub-015_task-LID_beh.tsv #> Task data saved: example_bids2/sub-016/ses-01/sub-016_task-LID_beh.tsv #> Task data saved: example_bids2/sub-017/ses-01/sub-017_task-LID_beh.tsv #> Task data saved: example_bids2/sub-018/ses-01/sub-018_task-LID_beh.tsv #> Task data saved: example_bids2/sub-019/ses-01/sub-019_task-LID_beh.tsv #> Task data saved: example_bids2/sub-020/ses-01/sub-020_task-LID_beh.tsv #> Task data saved: example_bids2/sub-021/ses-01/sub-021_task-LID_beh.tsv #> Task data saved: example_bids2/sub-022/ses-01/sub-022_task-LID_beh.tsv #> Task data saved: example_bids2/sub-023/ses-01/sub-023_task-LID_beh.tsv #> Task data saved: example_bids2/sub-024/ses-01/sub-024_task-LID_beh.tsv #> Task data saved: example_bids2/sub-025/ses-01/sub-025_task-LID_beh.tsv #> Task data saved: example_bids2/sub-026/ses-01/sub-026_task-LID_beh.tsv #> Task data saved: example_bids2/sub-027/ses-01/sub-027_task-LID_beh.tsv #> Task data saved: example_bids2/sub-028/ses-01/sub-028_task-LID_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"step-4-define-and-write-json-metadata","dir":"Articles","previous_headings":"","what":"Step 4: Define and Write JSON Metadata","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"Next, define metadata task, describe behavioral variables recorded experiment (task data contained tsv files). metadata nested list element describes specific column dataset. nested lists descrbibe keys belonging variable. Now JSON file added directory.","code":"# Metadata with nested lists for each variable meta_data <- list(   participant_id = list(     Description = \"Unique participant identifier in the format sub-XXX.\"   ),   age = list(     Description = \"Age of the participant in years.\",     Units = \"years\"   ),   gender = list(     Description = \"Self-reported gender of the participant.\",     Levels = list(       \"m\" = \"Male\",       \"f\" = \"Female\"     )   ),   arm_top = list(     Description = \"Indicates which arm was on top in a crossed posture.\",     Levels = list(       \"right\" = \"right arm\",       \"left\" = \"left arm\"     )   ),   length_lower_arm = list(     Description = \"Length of the participant's lower arm in centimeters.\",     Units = \"cm\"   ),   run = list(     Description = \"Run number in the experiment (e.g., first, second, etc.).\",     Levels = list(       \"1\" = \"first run\",       \"2\" = \"second run\"     )   ),   trial_in_run = list(     Description = \"Trial number within the run.\"   ),   posture = list(     Description = \"Posture of the participant during the task.\",     Levels = list(       \"crossed\" = \"crossed arm posture\",       \"uncrossed\" = \"uncrossed arm posture\"     )   ),   stim_side = list(     Description = \"Whether the two stimuli where on the same anatomical body side (e.g., both on the left arm).\",     Levels = list(       \"same\" = \"stimuli presented on same body side\",       \"different\" = \"stimuli presented across different body sides\"     )   ),   stim_segment = list(     Description = \"Whether the stimuli were presented within the same type of anatomical segment (upper arm or lower arm\",     Levels = list(       \"same\" = \"stimuli presented within same arm segment\",       \"different\" = \"stimuli presented across different arm segments\"     )   ),   soa = list(     Description = \"Stimulus onset asynchrony (the time difference between the two stimuli's onsets) in milliseconds.\",     Units = \"ms\"   ),   tactor1side = list(     Description = \"The antomical body side where the first tactor was applied.\",     Levels = list(       \"left\" = \"left body side\",       \"right\" = \"right body side\"     )   ),   tactor1segment = list(     Description = \"The arm segment where the first stimulus was applied.\",     Levels = list(       \"upper\" = \"upper arm\",       \"lower\" = \"forearm\"     )   ),   tactor2side = list(     Description = \"The antomical body side where the second tactor was applied.\",     Levels = list(       \"left\" = \"left body side\",       \"right\" = \"right body side\"     )   ),   tactor2segment = list(     Description = \"The arm segment where the second stimulus was applied.\",     Levels = list(       \"upper\" = \"upper arm\",       \"lower\" = \"forearm\"     )   ),   response_correct = list(     Description = \"Indicates whether the response was correct.\",     Levels = list(       \"0\" = \"Incorrect\",       \"1\" = \"Correct\"     )   ),   rt = list(     Description = \"Reaction time.\",     Units = \"milliseconds\"   ),   session = list(     Description = \"Session identifier. There was one session only.\",     Levels = list(       \"1\" = \"First session\"     )   ),   trial = list(     Description = \"Overall trial number across the entire experiment.\"   ) ) write_metadata(output_dir = output_dir, task_name = task_name, meta_data = meta_data) #> Metadata JSON saved: example_bids2/task-LID_beh.json"},{"path":"https://xaverfuchs.github.io/r2bids/articles/B_Example_with_real_data.html","id":"step-5-read-and-inspect-the-generated-files","dir":"Articles","previous_headings":"","what":"Step 5: Read and Inspect the Generated Files","title":"BIDS conversion example with data from a tactile perception study (B006)","text":"files created, can laod function read_bids(). output list participant data task data.","code":"data_loaded <- read_bids(bids_dir = \"example_bids2\", task_name = task_name, file_suffix = \"beh\") #> Participants data loaded from: example_bids2/participants.tsv #> Task data loaded from all task files. data_loaded$participants #>    participant_id age gender          arm_top length_lower_arm #> 1         sub-008  22      f right arm on top               21 #> 2         sub-009  21      f  left arm on top               24 #> 3         sub-010  21      f  left arm on top               19 #> 4         sub-011  23      m  left arm on top               33 #> 5         sub-012  19      f  left arm on top               30 #> 6         sub-013  24      m  left arm on top               27 #> 7         sub-014  31      m  left arm on top               26 #> 8         sub-015  23      m right arm on top               23 #> 9         sub-016  21      f  left arm on top               21 #> 10        sub-017  21      f right arm on top               21 #> 11        sub-018  20      f  left arm on top               25 #> 12        sub-019  29      m right arm on top               27 #> 13        sub-020  25      f  left arm on top               22 #> 14        sub-021  22      f right arm on top               23 #> 15        sub-022  27      m right arm on top               27 #> 16        sub-023  23      m right arm on top               26 #> 17        sub-024  23      m right arm on top               25 #> 18        sub-025  21      m right arm on top               27 #> 19        sub-026  20      f right arm on top               21 #> 20        sub-027  19      f right arm on top               20 #> 21        sub-028  29      m  left arm on top               22 head(data_loaded$task_data) #>   participant_id run trial_in_run posture stim_side stim_segment soa #> 1        sub-008   1            1 crossed different    different  50 #> 2        sub-008   1            2 crossed different    different 300 #> 3        sub-008   1            3 crossed different    different 100 #> 4        sub-008   1            4 crossed      same    different 100 #> 5        sub-008   1            5 crossed      same    different 800 #> 6        sub-008   1            6 crossed different    different 800 #>   tactor1side tactor1segment tactor2side tactor2segment response_correct   rt #> 1        left          upper       right          lower                1 1365 #> 2        left          upper       right          lower                1  844 #> 3        left          upper       right          lower                1  536 #> 4       right          lower       right          upper                1  855 #> 5       right          lower       right          upper                1 1037 #> 6        left          upper       right          lower                1  897 #>   session trial #> 1  ses-01     1 #> 2  ses-01     2 #> 3  ses-01     3 #> 4  ses-01     4 #> 5  ses-01     5 #> 6  ses-01     6"},{"path":"https://xaverfuchs.github.io/r2bids/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xaver Fuchs. Author, maintainer.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fuchs X (2024). r2bids: Convert R data frames behavioral data Brain Imaging Data Structure (BIDS) format. R package version 0.0.1, https://xaverfuchs.github.io/r2bids/.","code":"@Manual{,   title = {r2bids: Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format},   author = {Xaver Fuchs},   year = {2024},   note = {R package version 0.0.1},   url = {https://xaverfuchs.github.io/r2bids/}, }"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"r2bids---covert-r-data-to-bids-format","dir":"","previous_headings":"","what":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"package provides functions converting storing data reprensented R data frames convenient BIDS format. BIDS format becoming increasingly popular neuroscience means storing data sets along structured descriptions samples, tasks, variables.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"Read detailed documentation including examples … https://xaverfuchs.github.io/r2bids/","code":""},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"can install development version r2bids GitHub :","code":"# install.packages(\"devtools\") # devtools::install_github(\"xaverfuchs/r2bids\")"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"example-case","dir":"","previous_headings":"","what":"Example case","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"library(r2bids)"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"generate-some-toy-data","dir":"","previous_headings":"Example case","what":"Generate some toy data","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"example_data <- data.frame(   ParticipantID = c(1, 2, 3, 1, 2, 3),   Gender=c(\"M\", \"F\", \"O\", \"M\", \"F\", \"O\"),   Age=c(21, 32, 27, 21, 32, 27),   Session = c(1, 1, 1, 2, 2, 2),   ResponseTime = c(350, 400, 375, 415, 372, 401),   Accuracy = c(1, 0, 1, 1, 1, 1) )"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"validate-the-input-data","dir":"","previous_headings":"Example case","what":"Validate the input data","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"function renaming variables labels adhere BIDS conventions.","code":"example_data_checked <- check_input_data(data = example_data,                   participant_col = \"ParticipantID\",                   session_col = \"Session\",                   gender_col = \"Gender\") #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: M -> m #> renamed variable label: F -> f #> renamed variable label: O -> o #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002, sub-003 ... #> renamed variable: Session -> session #> renamed sessions to ses-01, ses-02 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: Age -> age #> renamed variable: ResponseTime -> response_time #> renamed variable: Accuracy -> accuracy #>  #> Step 4: checking correct coding of gender variable #> Warning in check_input_data(data = example_data, participant_col = #> \"ParticipantID\", : Invalid values found in gender column. Please recode to 'm', #> 'f', or 'o'."},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"write-bids-file","dir":"","previous_headings":"Example case","what":"Write BIDS file","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"write_bids(data = example_data_checked, output_dir = \"./readme_files/example_bids\", task_name = \"reaction\", participant_info_cols = c(\"age\", \"gender\"), file_suffix = \"beh\") #> Participants data saved: ./readme_files/example_bids/participants.tsv #> Task data saved: ./readme_files/example_bids/sub-001/ses-01/sub-001_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-001/ses-02/sub-001_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-002/ses-01/sub-002_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-002/ses-02/sub-002_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-003/ses-01/sub-003_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-003/ses-02/sub-003_task-reaction_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"define-metadata-and-write-json-file","dir":"","previous_headings":"Example case","what":"Define Metadata and write JSON file","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"resulting output looks like : detailed example see vignettes package website!","code":"# Metadata for the example above with nested lists for each variable meta_data <- list(   participant_id = list(     Description = \"Unique participant identifier in the format sub-XXX.\",     Levels = list(       \"sub-001\" = \"Participant 1\",       \"sub-002\" = \"Participant 2\",       \"sub-003\" = \"Participant 3\"     )   ),   gender = list(     Description = \"Self-reported gender of the participant.\",     Levels = list(       \"m\" = \"Male\",       \"f\" = \"Female\",       \"o\" = \"Other\"     )   ),   age = list(     Description = \"Age of the participant in years.\",     Units = \"years\"   ),   session = list(     Description = \"Session identifier.\",     Levels = list(       \"ses-01\" = \"First session\",       \"ses-02\" = \"Second session\"     )   ),   response_time = list(     Description = \"Response time of the participant in the task.\",     Units = \"milliseconds\"   ),   accuracy = list(     Description = \"Task accuracy (1 = correct, 0 = incorrect).\",     Levels = list(       \"0\" = \"Incorrect response\",       \"1\" = \"Correct response\"     )   ) ) write_metadata(output_dir = \"./readme_files/example_bids\", task_name = \"reaction\", meta_data = meta_data) #> Metadata JSON saved: ./readme_files/example_bids/task-reaction_beh.json"},{"path":"https://xaverfuchs.github.io/r2bids/reference/B006Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Experiment B006 — B006Data","title":"Data from the Experiment B006 — B006Data","text":"data experiment touch perception humans applied -called Limb Identification Task. trial, participants receive two stimuli either arm two different arms decided lifting either heels toes whether different limbs. interest limb crossing effect task, .e., limbs crossed, participants make mistakes respond slowly despite fact task require participants take posture spatial aspects account decisions. details see publication https://doi.org/10.1101/2024.02.01.578364.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/B006Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Experiment B006 — B006Data","text":"","code":"B006Data"},{"path":"https://xaverfuchs.github.io/r2bids/reference/B006Data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Experiment B006 — B006Data","text":"data frame 32455 rows 30 variables: Participant Participant identifier Run Experiment run (e.g., 'Run1', 'Run2') Posture Posture trial (e.g., 'uncrossed') StimSide Side stimulus (e.g., '', 'different') StimSegment Segment arm stimulus applied Tactor1 First tactor number Tactor2 Second tactor number Tactor1Side Side first tactor (e.g., 'left', 'right') Tactor1Segment Segment arm first tactor Tactor2Side Side second tactor (e.g., 'left', 'right') Tactor2Segment Segment arm second tactor Stim1Intens Intensity first stimulus Stim2Intens Intensity second stimulus Trialtype Type trial SOA Stimulus Onset Asynchrony (interval stimuli) Repetition Repetition count Trialnumber Number trial TimeAfterBeep Time beep (timing indicator) Response Participant's response Response_meaning Meaning response Response_correct Whether response correct RT Reaction time milliseconds Order Order trial ResponseCoding Coding response Trial_ok Whether trial valid Trial_repeated Whether trial repeated Age Age participant Sex Sex participant (e.g., 'male', 'female', '') Arm_top arm top crossed condition Length_lower_arm Length participant's lower arm centimeters","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/B006Data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the Experiment B006 — B006Data","text":"Data collected behavioral neuroscience experiment Tobias Heed's Reach Touch Lab.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and preprocess the input data for BIDS formatting — check_input_data","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"function checks certain requirements met dataset, including variable names snake_case, valid participant IDs, session description. function can optionally also check proper gender encoding (\"m\", \"f\", \"o\"). attempts convert invalid data outputs warnings errors issues arise.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"","code":"check_input_data(   data,   participant_col = \"participant_id\",   session_col = \"session\",   gender_col = NULL,   ignore_cols = NULL )"},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"data data frame contains dataset validated. participant_col Name column containing participant IDs (default \"participant_id\"). session_col Name column containing session IDs (default \"session\"). gender_col Name column containing gender information, (default NULL, assuming gender column). ignore_cols Character vector variable names ignore. Sometimes function rename data desirable way (example special characters meaning factor). case can ignore variables rename/recode manually instead.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"validated possibly modified data frame appropriate formatting.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"","code":"# Example dataset example_data <- data.frame(ParticipantID = c(1, 2), Session = c(1, 1), Gender = c(\"Male\", \"Female\"), weird_variable=c(\"1_2\", \"3_4\")) check_input_data(data = example_data, participant_col = \"ParticipantID\", session_col = \"Session\", gender_col = \"Gender\", ignore_cols=c(\"weird_variable\")) #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: Male -> male #> renamed variable label: Female -> female #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002 ... #> renamed variable: Session -> session #> renamed sessions to ses-01 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: NA -> NA #> renamed variable:  ->  #>  #> Step 4: checking correct coding of gender variable #> Warning: Invalid values found in gender column. Please recode to 'm', 'f', or 'o'. #>   participant_id session gender weird_variable #> 1        sub-001  ses-01   Male            1_2 #> 2        sub-002  ses-01 Female            3_4"},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":null,"dir":"Reference","previous_headings":"","what":"Read BIDS-formatted data — read_bids","title":"Read BIDS-formatted data — read_bids","text":"function searches BIDS directory task-related .tsv files reads data R. handles cases session folders present well cases session folders.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read BIDS-formatted data — read_bids","text":"","code":"read_bids(bids_dir, task_name, file_suffix = \"beh\")"},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read BIDS-formatted data — read_bids","text":"bids_dir root directory BIDS dataset. task_name name task (e.g., \"reaction\"). file_suffix suffix task files (e.g., \"beh\", \"events\"). Default \"beh\".","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read BIDS-formatted data — read_bids","text":"list containing participant data task data.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read BIDS-formatted data — read_bids","text":"","code":"data <- data.frame(participant_id = c(1, 1, 2, 2),                    session = c(1, 2, 1, 2),                    age = c(25, 25, 30, 30),                    gender = c('m', 'm', 'f', 'f'),                    response_time = c(100, 200, 150, 180)) write_bids(data, output_dir = \"bids_dir\", task_name = \"RTTask\", participant_info_cols = c(\"age\", \"gender\")) #> Participants data saved: bids_dir/participants.tsv #> Task data saved: bids_dir/1/1/1_task-RTTask_beh.tsv #> Task data saved: bids_dir/1/2/1_task-RTTask_beh.tsv #> Task data saved: bids_dir/2/1/2_task-RTTask_beh.tsv #> Task data saved: bids_dir/2/2/2_task-RTTask_beh.tsv read_bids(bids_dir = \"bids_dir\", task_name = \"RTTask\") #> Participants data loaded from: bids_dir/participants.tsv #> Error in `$<-.data.frame`(`*tmp*`, \"participant_id\", value = character(0)): replacement has 0 rows, data has 1"},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string to snake_case — to_snake_case","title":"Convert a string to snake_case — to_snake_case","text":"function converts given string snake_case replacing spaces special characters underscores converting letters lowercase.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string to snake_case — to_snake_case","text":"","code":"to_snake_case(string)"},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a string to snake_case — to_snake_case","text":"string character string needs converted snake_case.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a string to snake_case — to_snake_case","text":"snake_case version input string.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a string to snake_case — to_snake_case","text":"","code":"to_snake_case(\"Hello World\") #> [1] \"hello_world\" to_snake_case(\"ConvertThisString\") #> [1] \"convert_this_string\""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":null,"dir":"Reference","previous_headings":"","what":"Create BIDS-compliant behavioral data files — write_bids","title":"Create BIDS-compliant behavioral data files — write_bids","text":"function creates BIDS-compliant behavioral data files .tsv format. generates participants file (participants.tsv) individual task-based files participant session.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create BIDS-compliant behavioral data files — write_bids","text":"","code":"write_bids(   data,   output_dir,   task_name,   participant_info_cols,   file_suffix = \"beh\" )"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create BIDS-compliant behavioral data files — write_bids","text":"data data frame containing participant information behavioral data. output_dir directory BIDS dataset saved. task_name Name task, used filename. participant_info_cols character vector column names include participants.tsv file. variables now included tsv files containing task data. file_suffix string defining suffix task files. BIDS usually \"events\" \"beh\" (default) \"behavior\"","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create BIDS-compliant behavioral data files — write_bids","text":"function return anything writes files output directory.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create BIDS-compliant behavioral data files — write_bids","text":"","code":"data <- data.frame(participant_id = c(1, 1, 2, 2),                    session = c(1, 2, 1, 2),                    age = c(25, 25, 30, 30),                    gender = c('m', 'm', 'f', 'f'),                    response_time = c(100, 200, 150, 180)) write_bids(data, output_dir = \"bids_dir\", task_name = \"RTTask\", participant_info_cols = c(\"age\", \"gender\")) #> Participants data saved: bids_dir/participants.tsv #> Task data saved: bids_dir/1/1/1_task-RTTask_beh.tsv #> Task data saved: bids_dir/1/2/1_task-RTTask_beh.tsv #> Task data saved: bids_dir/2/1/2_task-RTTask_beh.tsv #> Task data saved: bids_dir/2/2/2_task-RTTask_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write BIDS JSON Metadata — write_metadata","title":"Write BIDS JSON Metadata — write_metadata","text":"function creates BIDS-compliant JSON metadata file task data.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write BIDS JSON Metadata — write_metadata","text":"","code":"write_metadata(output_dir, task_name, meta_data)"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write BIDS JSON Metadata — write_metadata","text":"output_dir directory BIDS metadata file saved. task_name name task include JSON filename. meta_data named list containing metadata behavioral task.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write BIDS JSON Metadata — write_metadata","text":"function return anything writes JSON file output directory.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write BIDS JSON Metadata — write_metadata","text":"","code":"meta_data <- list(response_time = list(Description = \"Response time in milliseconds\", Units = \"ms\")) write_metadata(output_dir = \"bids_dir\", task_name = \"RTTask\", meta_data = meta_data) #> Metadata JSON saved: bids_dir/task-RTTask_beh.json"}]
