[{"path":"https://xaverfuchs.github.io/r2bids/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rabBITS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-1-create-toy-data","dir":"Articles","previous_headings":"","what":"Step 1: Create Toy Data","title":"BIDS conversion example with toy data","text":"create simple toy dataset participant information behavioral data. Note variables deliberately called like called according BIDS conventions. dataset contains three participants response times accuracy. participant completed one session reaction time task.","code":"# Toy dataset example_data <- data.frame(   ParticipantID = c(1, 2, 3, 1, 2, 3),   Gender=c(\"M\", \"F\", \"O\", \"M\", \"F\", \"O\"),   Age=c(21, 32, 27, 21, 32, 27),   Session = c(1, 1, 1, 2, 2, 2),   ResponseTime = c(350, 400, 375, 415, 372, 401),   Accuracy = c(1, 0, 1, 1, 1, 1) )  # View the data print(example_data) #>   ParticipantID Gender Age Session ResponseTime Accuracy #> 1             1      M  21       1          350        1 #> 2             2      F  32       1          400        0 #> 3             3      O  27       1          375        1 #> 4             1      M  21       2          415        1 #> 5             2      F  32       2          372        1 #> 6             3      O  27       2          401        1"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-2-validate-input-data","dir":"Articles","previous_headings":"","what":"Step 2: Validate Input Data","title":"BIDS conversion example with toy data","text":"creating BIDS dataset, ’s important ensure input data complies naming conventions (snake_case) contains necessary columns like participant IDs sessions. checking implemented check_input_data() function renames variables labels snake_case reports . Note creates new data set. Please check resulting set ensure everything correct. apply function toy data created last step. input data valid, can proceed next steps.","code":"# Run validation example_data_checked <- check_input_data(data = example_data,                   participant_col = \"ParticipantID\",                   session_col = \"Session\",                   gender_col = \"Gender\") #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: M -> m #> renamed variable label: F -> f #> renamed variable label: O -> o #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002, sub-003 ... #> renamed variable: Session -> session #> renamed sessions to ses-01, ses-02 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: Age -> age #> renamed variable: ResponseTime -> response_time #> renamed variable: Accuracy -> accuracy #>  #> Step 4: checking correct coding of gender variable  print(example_data_checked) #>   participant_id gender age session response_time accuracy #> 1        sub-001      m  21  ses-01           350        1 #> 2        sub-002      f  32  ses-01           400        0 #> 3        sub-003      o  27  ses-01           375        1 #> 4        sub-001      m  21  ses-02           415        1 #> 5        sub-002      f  32  ses-02           372        1 #> 6        sub-003      o  27  ses-02           401        1"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-3-write-the-bids-data","dir":"Articles","previous_headings":"","what":"Step 3: Write the BIDS data","title":"BIDS conversion example with toy data","text":"Now, use write_bids function generate BIDS-compliant directory files. function performs following actions: Creates output directory (doesn’t already exist). Writes participants.tsv file includes participant IDs session numbers. Writes task-specific .tsv file behavioral data (response times, accuracy, etc.). find directory now containing desired files.","code":"# Output directory (temporary for this example) output_dir <- \"example_bids\"  # Task name for BIDS task_name <- \"reaction\"  # Create the BIDS dataset write_bids(data = example_data_checked, output_dir = output_dir, task_name = task_name, participant_info_cols = c(\"age\", \"gender\"), file_suffix = \"beh\") #> Participants data saved: example_bids/participants.tsv #> Task data saved: example_bids/sub-001/ses-01/sub-001_task-reaction_beh.tsv #> Task data saved: example_bids/sub-001/ses-02/sub-001_task-reaction_beh.tsv #> Task data saved: example_bids/sub-002/ses-01/sub-002_task-reaction_beh.tsv #> Task data saved: example_bids/sub-002/ses-02/sub-002_task-reaction_beh.tsv #> Task data saved: example_bids/sub-003/ses-01/sub-003_task-reaction_beh.tsv #> Task data saved: example_bids/sub-003/ses-02/sub-003_task-reaction_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-4-define-and-write-json-metadata","dir":"Articles","previous_headings":"","what":"Step 4: Define and Write JSON Metadata","title":"BIDS conversion example with toy data","text":"Next, define metadata task, describe behavioral variables recorded experiment (task data contained tsv files). metadata nested list element describes specific column dataset. nested lists descrbibe keys belonging variable. JSON file included BIDS structure can now easily written wirth function write_metadata(). JSON file added directory.","code":"# Metadata for the example above with nested lists for each variable meta_data <- list(   participant_id = list(     Description = \"Unique participant identifier in the format sub-XXX.\",     Levels = list(       \"sub-001\" = \"Participant 1\",       \"sub-002\" = \"Participant 2\",       \"sub-003\" = \"Participant 3\"     )   ),   gender = list(     Description = \"Self-reported gender of the participant.\",     Levels = list(       \"m\" = \"Male\",       \"f\" = \"Female\",       \"o\" = \"Other\"     )   ),   age = list(     Description = \"Age of the participant in years.\",     Units = \"years\"   ),   session = list(     Description = \"Session identifier.\",     Levels = list(       \"ses-01\" = \"First session\",       \"ses-02\" = \"Second session\"     )   ),   response_time = list(     Description = \"Response time of the participant in the task.\",     Units = \"milliseconds\"   ),   accuracy = list(     Description = \"Task accuracy (1 = correct, 0 = incorrect).\",     Levels = list(       \"0\" = \"Incorrect response\",       \"1\" = \"Correct response\"     )   ) )  # View the metadata print(meta_data) #> $participant_id #> $participant_id$Description #> [1] \"Unique participant identifier in the format sub-XXX.\" #>  #> $participant_id$Levels #> $participant_id$Levels$`sub-001` #> [1] \"Participant 1\" #>  #> $participant_id$Levels$`sub-002` #> [1] \"Participant 2\" #>  #> $participant_id$Levels$`sub-003` #> [1] \"Participant 3\" #>  #>  #>  #> $gender #> $gender$Description #> [1] \"Self-reported gender of the participant.\" #>  #> $gender$Levels #> $gender$Levels$m #> [1] \"Male\" #>  #> $gender$Levels$f #> [1] \"Female\" #>  #> $gender$Levels$o #> [1] \"Other\" #>  #>  #>  #> $age #> $age$Description #> [1] \"Age of the participant in years.\" #>  #> $age$Units #> [1] \"years\" #>  #>  #> $session #> $session$Description #> [1] \"Session identifier.\" #>  #> $session$Levels #> $session$Levels$`ses-01` #> [1] \"First session\" #>  #> $session$Levels$`ses-02` #> [1] \"Second session\" #>  #>  #>  #> $response_time #> $response_time$Description #> [1] \"Response time of the participant in the task.\" #>  #> $response_time$Units #> [1] \"milliseconds\" #>  #>  #> $accuracy #> $accuracy$Description #> [1] \"Task accuracy (1 = correct, 0 = incorrect).\" #>  #> $accuracy$Levels #> $accuracy$Levels$`0` #> [1] \"Incorrect response\" #>  #> $accuracy$Levels$`1` #> [1] \"Correct response\" write_metadata(output_dir = output_dir, task_name = task_name, meta_data = meta_data) #> Metadata JSON saved: example_bids/task-reaction_beh.json"},{"path":"https://xaverfuchs.github.io/r2bids/articles/A_Example_with_toy_data.html","id":"step-5-read-and-inspect-the-generated-files","dir":"Articles","previous_headings":"","what":"Step 5: Read and Inspect the Generated Files","title":"BIDS conversion example with toy data","text":"files created, can laod function read_bids(). output list participant data task data. can see identical data generated Step 1.","code":"data_loaded <- read_bids(bids_dir = \"example_bids\", task_name = task_name, file_suffix = \"beh\") #> Participants data loaded from: example_bids/participants.tsv #> Task data loaded from all task files. data_loaded$participants #>   participant_id age gender #> 1        sub-001  21      m #> 2        sub-002  32      f #> 3        sub-003  27      o data_loaded$task_data #>   participant_id session response_time accuracy #> 1        sub-001  ses-01           350        1 #> 2        sub-001  ses-02           415        1 #> 3        sub-002  ses-01           400        0 #> 4        sub-002  ses-02           372        1 #> 5        sub-003  ses-01           375        1 #> 6        sub-003  ses-02           401        1"},{"path":"https://xaverfuchs.github.io/r2bids/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xaver Fuchs. Author, maintainer.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fuchs X (2024). r2bids: Convert R data frames behavioral data Brain Imaging Data Structure (BIDS) format. R package version 0.0.1, https://xaverfuchs.github.io/r2bids/.","code":"@Manual{,   title = {r2bids: Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format},   author = {Xaver Fuchs},   year = {2024},   note = {R package version 0.0.1},   url = {https://xaverfuchs.github.io/r2bids/}, }"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"r2bids---covert-r-data-to-bids-format","dir":"","previous_headings":"","what":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"package provides functions converting storing data reprensented R data frames convenient BIDS format. BIDS format becoming increasingly popular neuroscience means storing data sets along structured descriptions samples, tasks, variables.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"Read detailed documentation including examples … https://xaverfuchs.github.io/r2bids/","code":""},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"can install development version r2bids GitHub :","code":"# install.packages(\"devtools\") # devtools::install_github(\"xaverfuchs/r2bids\")"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"example-case","dir":"","previous_headings":"","what":"Example case","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"library(r2bids)"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"generate-some-toy-data","dir":"","previous_headings":"Example case","what":"Generate some toy data","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"example_data <- data.frame(   ParticipantID = c(1, 2, 3, 1, 2, 3),   Gender=c(\"M\", \"F\", \"O\", \"M\", \"F\", \"O\"),   Age=c(21, 32, 27, 21, 32, 27),   Session = c(1, 1, 1, 2, 2, 2),   ResponseTime = c(350, 400, 375, 415, 372, 401),   Accuracy = c(1, 0, 1, 1, 1, 1) )"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"validate-the-input-data","dir":"","previous_headings":"Example case","what":"Validate the input data","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"function renaming variables labels adhere BIDS conventions.","code":"example_data_checked <- check_input_data(data = example_data,                   participant_col = \"ParticipantID\",                   session_col = \"Session\",                   gender_col = \"Gender\") #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: M -> m #> renamed variable label: F -> f #> renamed variable label: O -> o #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002, sub-003 ... #> renamed variable: Session -> session #> renamed sessions to ses-01, ses-02 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: Age -> age #> renamed variable: ResponseTime -> response_time #> renamed variable: Accuracy -> accuracy #>  #> Step 4: checking correct coding of gender variable"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"write-bids-file","dir":"","previous_headings":"Example case","what":"Write BIDS file","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"","code":"write_bids(data = example_data_checked, output_dir = \"./readme_files/example_bids\", task_name = \"reaction\", participant_info_cols = c(\"age\", \"gender\"), file_suffix = \"beh\") #> Participants data saved: ./readme_files/example_bids/participants.tsv #> Task data saved: ./readme_files/example_bids/sub-001/ses-01/sub-001_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-001/ses-02/sub-001_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-002/ses-01/sub-002_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-002/ses-02/sub-002_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-003/ses-01/sub-003_task-reaction_beh.tsv #> Task data saved: ./readme_files/example_bids/sub-003/ses-02/sub-003_task-reaction_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/index.html","id":"define-metadata-and-write-json-file","dir":"","previous_headings":"Example case","what":"Define Metadata and write JSON file","title":"Convert R data frames with behavioral data to the Brain Imaging Data Structure (BIDS) format","text":"resulting output looks like : detailed example see vignettes package website!","code":"# Metadata for the example above with nested lists for each variable meta_data <- list(   participant_id = list(     Description = \"Unique participant identifier in the format sub-XXX.\",     Levels = list(       \"sub-001\" = \"Participant 1\",       \"sub-002\" = \"Participant 2\",       \"sub-003\" = \"Participant 3\"     )   ),   gender = list(     Description = \"Self-reported gender of the participant.\",     Levels = list(       \"m\" = \"Male\",       \"f\" = \"Female\",       \"o\" = \"Other\"     )   ),   age = list(     Description = \"Age of the participant in years.\",     Units = \"years\"   ),   session = list(     Description = \"Session identifier.\",     Levels = list(       \"ses-01\" = \"First session\",       \"ses-02\" = \"Second session\"     )   ),   response_time = list(     Description = \"Response time of the participant in the task.\",     Units = \"milliseconds\"   ),   accuracy = list(     Description = \"Task accuracy (1 = correct, 0 = incorrect).\",     Levels = list(       \"0\" = \"Incorrect response\",       \"1\" = \"Correct response\"     )   ) ) write_metadata(output_dir = \"./readme_files/example_bids\", task_name = \"reaction\", meta_data = meta_data) #> Metadata JSON saved: ./readme_files/example_bids/task-reaction_beh.json"},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and preprocess the input data for BIDS formatting — check_input_data","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"function checks certain requirements met dataset, including variable names snake_case, valid participant IDs, session description. function can optionally also check proper gender encoding (\"m\", \"f\", \"o\"). attempts convert invalid data outputs warnings errors issues arise.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"","code":"check_input_data(   data,   participant_col = \"participant_id\",   session_col = \"session\",   gender_col = NULL )"},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"data data frame contains dataset validated. participant_col Name column containing participant IDs (default \"participant_id\"). session_col Name column containing session IDs (default \"session\"). gender_col Name column containing gender information, (default NULL, assuming gender column).","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"validated possibly modified data frame appropriate formatting.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/check_input_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate and preprocess the input data for BIDS formatting — check_input_data","text":"","code":"# Example dataset example_data <- data.frame(ParticipantID = c(1, 2), Session = c(1, 1), Gender = c(\"Male\", \"Female\")) check_input_data(data = example_data, participant_col = \"ParticipantID\", session_col = \"Session\", gender_col = \"Gender\") #>  #> Step 1: checking variable labels #> checking variable Gender #> renamed variable label: Male -> male #> renamed variable label: Female -> female #>  #> Step 2: checking participant and session identifiers #> renamed variable: ParticipantID -> participant_id #> renamed ids to sub-001, sub-002 ... #> renamed variable: Session -> session #> renamed sessions to ses-01 ... #> renamed variable: Gender -> gender #>  #> Step 3: checking if all variable names are snake_case #> renamed variable: NA -> NA #> renamed variable:  ->  #>  #> Step 4: checking correct coding of gender variable #> Warning: Invalid values found in gender column. Please recode to 'm', 'f', or 'o'. #>   participant_id session gender #> 1        sub-001  ses-01   male #> 2        sub-002  ses-01 female"},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":null,"dir":"Reference","previous_headings":"","what":"Read BIDS-formatted data — read_bids","title":"Read BIDS-formatted data — read_bids","text":"function searches BIDS directory task-related .tsv files reads data R. handles cases session folders present well cases session folders.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read BIDS-formatted data — read_bids","text":"","code":"read_bids(bids_dir, task_name, file_suffix = \"beh\")"},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read BIDS-formatted data — read_bids","text":"bids_dir root directory BIDS dataset. task_name name task (e.g., \"reaction\"). file_suffix suffix task files (e.g., \"beh\", \"events\"). Default \"beh\".","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read BIDS-formatted data — read_bids","text":"list containing participant data task data.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/read_bids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read BIDS-formatted data — read_bids","text":"","code":"# TODO"},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string to snake_case — to_snake_case","title":"Convert a string to snake_case — to_snake_case","text":"function converts given string snake_case replacing spaces special characters underscores converting letters lowercase.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string to snake_case — to_snake_case","text":"","code":"to_snake_case(string)"},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a string to snake_case — to_snake_case","text":"string character string needs converted snake_case.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a string to snake_case — to_snake_case","text":"snake_case version input string.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/to_snake_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a string to snake_case — to_snake_case","text":"","code":"to_snake_case(\"Hello World\") #> [1] \"hello_world\" to_snake_case(\"ConvertThisString\") #> [1] \"convert_this_string\""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":null,"dir":"Reference","previous_headings":"","what":"Create BIDS-compliant behavioral data files — write_bids","title":"Create BIDS-compliant behavioral data files — write_bids","text":"function creates BIDS-compliant behavioral data files .tsv format. generates participants file (participants.tsv) individual task-based files participant session.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create BIDS-compliant behavioral data files — write_bids","text":"","code":"write_bids(   data,   output_dir,   task_name,   participant_info_cols,   file_suffix = \"beh\" )"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create BIDS-compliant behavioral data files — write_bids","text":"data data frame containing participant information behavioral data. output_dir directory BIDS dataset saved. task_name Name task, used filename. participant_info_cols character vector column names include participants.tsv file. variables now included tsv files containing task data. file_suffix string defining suffix task files. BIDS usually \"events\" \"beh\" (default) \"behavior\"","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create BIDS-compliant behavioral data files — write_bids","text":"function return anything writes files output directory.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_bids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create BIDS-compliant behavioral data files — write_bids","text":"","code":"data <- data.frame(participant_id = c(1, 1, 2, 2),                    session = c(1, 2, 1, 2),                    age = c(25, 25, 30, 30),                    gender = c('m', 'm', 'f', 'f'),                    response_time = c(100, 200, 150, 180)) write_bids(data, output_dir = \"bids_dir\", task_name = \"RTTask\", participant_info_cols = c(\"age\", \"gender\")) #> Main BIDS directory successfully created: bids_dir #> Participants data saved: bids_dir/participants.tsv #> Folder successfully created: bids_dir/1/1 #> Task data saved: bids_dir/1/1/1_task-RTTask_beh.tsv #> Folder successfully created: bids_dir/1/2 #> Task data saved: bids_dir/1/2/1_task-RTTask_beh.tsv #> Folder successfully created: bids_dir/2/1 #> Task data saved: bids_dir/2/1/2_task-RTTask_beh.tsv #> Folder successfully created: bids_dir/2/2 #> Task data saved: bids_dir/2/2/2_task-RTTask_beh.tsv"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write BIDS JSON Metadata — write_metadata","title":"Write BIDS JSON Metadata — write_metadata","text":"function creates BIDS-compliant JSON metadata file task data.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write BIDS JSON Metadata — write_metadata","text":"","code":"write_metadata(output_dir, task_name, meta_data)"},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write BIDS JSON Metadata — write_metadata","text":"output_dir directory BIDS metadata file saved. task_name name task include JSON filename. meta_data named list containing metadata behavioral task.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write BIDS JSON Metadata — write_metadata","text":"function return anything writes JSON file output directory.","code":""},{"path":"https://xaverfuchs.github.io/r2bids/reference/write_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write BIDS JSON Metadata — write_metadata","text":"","code":"meta_data <- list(response_time = \"Response time in milliseconds\") write_metadata(output_dir = getwd(), task_name = \"reaction_time\", meta_data = meta_data) #> Metadata JSON saved: /Users/b1082752/Library/Mobile Documents/com~apple~CloudDocs/WORK TEMP/12_openscience/r2bids/docs/reference/task-reaction_time_beh.json"}]
